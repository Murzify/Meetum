[versions]
android-minSdk = "26"
android-compileSdk = "34"
android-targetSdk = "34"
compose-compiler = "1.5.8"
agp = "8.2.2"
compose-plugin = "1.5.11"
activity-compose = "1.8.2"
compose = "1.6.0"
kotlin = "1.9.21"
calendar = "2.4.0"
coroutines = "1.8.0-RC"
lottie = "6.1.0"
decompose = "2.2.0-alpha03"
koin = "3.5.0"
window-size = "0.3.1"
kotlinx-serialization = "1.6.0"
gms = "4.4.0"
firebase-kmp = "1.11.1"
gms-auth = "20.7.0"
sqldelight = "2.0.0"
kotlinx-datetime = "0.5.0"
uuid = "0.8.2"
moko = "0.23.0"
sentry = "4.0.0"
sentry-kmp = "0.3.0"
buildconfig = "5.3.1"
datastore = "1.0.0"
ktor = "2.3.7"
napier = "2.7.1"
kottie = "1.3.1"

[libraries]
activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activity-compose" }
ui = { group = "androidx.compose.ui", name = "ui", version.ref = "compose" }
ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling", version.ref = "compose" }
ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview", version.ref = "compose" }
calendar = { module = "com.kizitonwose.calendar:compose", version.ref = "calendar" }
coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "coroutines" }
lottie-compose = { group = "com.airbnb.android", name = "lottie-compose", version.ref = "lottie" }
decompose = { group = "com.arkivanov.decompose", name = "decompose", version.ref = "decompose" }
decompose-extensions = { group = "com.arkivanov.decompose", name = "extensions-compose-jetbrains", version.ref = "decompose" }
koin-core = { group = "io.insert-koin", name = "koin-core", version.ref = "koin" }
window-size = { group = "dev.chrisbanes.material3", name = "material3-window-size-class-multiplatform", version.ref = "window-size" }
kotlinx-serialization = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-datetime = { group = "org.jetbrains.kotlinx", name = "kotlinx-datetime", version.ref = "kotlinx-datetime" }
uuid = { group = "com.benasher44", name = "uuid", version.ref = "uuid" }
datastore-prefs = { group = "androidx.datastore", name = "datastore-preferences-core", version.ref = "datastore" }
kottie = { group = "io.github.ismai117", name = "kottie", version.ref = "kottie" }

# Firebase
firebase-auth = { group = "dev.gitlive", name = "firebase-auth", version.ref = "firebase-kmp" }
firebase-database = { group = "dev.gitlive", name = "firebase-database", version.ref = "firebase-kmp" }
play-services-auth = { group = "com.google.android.gms", name = "play-services-auth", version.ref = "gms-auth" }

# SQLDelight
sqldelight-android = { group = "app.cash.sqldelight", name = "android-driver", version.ref = "sqldelight" }
sqldelight-jvm = { group = "app.cash.sqldelight", name = "sqlite-driver", version.ref = "sqldelight" }
sqldelight-coroutines = { group = "app.cash.sqldelight", name = "coroutines-extensions", version.ref = "sqldelight" }

# moko resources
resources-generator = { group = "dev.icerock.moko", name = "resources-generator", version.ref = "moko" }
moko-resources = { group = "dev.icerock.moko", name = "resources", version.ref = "moko" }
moko-resources-compose = { group = "dev.icerock.moko", name = "resources-compose", version.ref = "moko" }

# Sentry
sentry-kmp = { group = "io.sentry", name = "sentry-kotlin-multiplatform", version.ref = "sentry-kmp" }

# Ktor
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-logging-jvm = { module = "io.ktor:ktor-client-logging-jvm", version.ref = "ktor" }

napier = { group = "io.github.aakira", name = "napier", version.ref = "napier" }

[plugins]
com-android-application = { id = "com.android.application", version.ref = "agp" }
com-android-library = { id = "com.android.library", version.ref = "agp" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
google-services = { id = "com.google.gms.google-services", version.ref = "gms" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
multiplatform-resources = { id = "dev.icerock.mobile.multiplatform-resources", version.ref = "moko" }
sentry = { id = "io.sentry.jvm.gradle", version.ref = "sentry" }
buildconfig = { id = "com.github.gmazzo.buildconfig", version.ref = "buildconfig" }
